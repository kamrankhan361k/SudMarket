import { Component, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { MatDialog } from '@angular/material/dialog';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { MatTableDataSource } from '@angular/material/table';
import { Router } from '@angular/router';
import { Banque, GetBanque } from 'src/app/Models/banque.model';
import {
  CaisseExploitation,
  GetCaisseExploitation,
} from 'src/app/Models/caisseExploitation.model';
import {
  CaissePrincipale,
  GetCaissePrincipale,
} from 'src/app/Models/caissePrincipale.model';
import { GetCaisseVendeur } from 'src/app/Models/caissevendeur.model';
import { CaisseVendeur } from 'src/app/Models/historiqueCaisseVendeur.model';
import { TransfertCaisseExploitation } from 'src/app/Models/transfert-caisse-exploitation.model';
import { TransfertCaisseBanque } from 'src/app/Models/transfert-inter-caisse-banquaire.model';
import { TransfertCaisse } from 'src/app/Models/transfert-inter-caisse.model';
import { CaissesService } from 'src/app/Services/caisses.service';
import { GlobalService } from 'src/app/Services/global.service';

@Component({
  selector: 'app-via-banque',
  templateUrl: './via-banque.component.html',
  styleUrls: ['./via-banque.component.scss'],
})
export class ViaBanqueComponent {
  dataSource!: any;
  displayedColumns = [
    'banque_id',
    'caisse_exploitation_id',
    'montant',
    'type_source',
    'description',
    'date_depense',
  ];
  
  TotalMontant!: number;
  isloadingpage!: boolean;

  tbCaissePrincipale!: CaissePrincipale[];
  tbCaisseExploitation!: CaisseExploitation[];
  tbBanque!: Banque[];

  transfert_id!: number;
  caisse_principale_id!: number;
  banque_id!: number;
  montant!: number;
  type_depense!: string;
  description!: string;
  date_transfert!: Date;
  caisse_exploitation_id!: number;
  soldeactielBanque!: number

  constructor(
    private router: Router,
    public globalService: GlobalService,
    private caisseService: CaissesService,
    private dialog: MatDialog
  ) {}

  @ViewChild(MatSort, { static: true }) sort!: MatSort;
  @ViewChild(MatPaginator) paginator!: MatPaginator;

  ngOnInit(): void {
    this.getCiasseExploitation();
    this.getListTransfertCaisseExploitation();
    this.getListBanque();
  }

  getListBanque() {
    const banque: GetBanque = {
      banque_id: 0,
    };
    this.caisseService.getListBanque(banque).subscribe((data) => {
      console.log(data.message);
      this.tbBanque = data.message;
      this.banque_id = data.message[0].banque_id;
      this.soldeactielBanque = data.message[0].solde
    });
  }

  getCiasseExploitation() {
    const caisse: GetCaisseExploitation = {
      caisse_exploitation_id: 0,
    };
    this.caisseService.getCaisseExploitation(caisse).subscribe((data) => {
      console.log(data.message);
      this.caisse_exploitation_id = data.message[0].caisse_exploitation_id;
      this.tbCaisseExploitation = data.message;
    });
  }

  getBanqueName(banque_id: number): string {
    const banque = this.tbBanque.find(
      (p) => p.banque_id === banque_id
    );
    return banque ? banque.nom_banque : 'Unknown Banque';
  }

  getCaisseExploitationName(caisse_exploitation_id: number): string {
    const caisse = this.tbCaisseExploitation.find(
      (p) => p.caisse_exploitation_id === caisse_exploitation_id
    );
    return caisse ? caisse.nom_caisse : 'Unknown Caisse';
  }

  getListTransfertCaisseExploitation() {
    const transfert = {transfert_id: 0};
    this.caisseService.getListTransfertCaisseExploiation(transfert).subscribe((data) => {
      const transfertsAvecBanque = data.message.filter((transfert: { banque_id: null; }) => transfert.banque_id !== null);
      console.log(transfertsAvecBanque);
      this.TotalMontant = this.globalService.calculTotal('montant',transfertsAvecBanque);
      this.dataSource = new MatTableDataSource(transfertsAvecBanque);
    });
  }
  

  selectCaisseExploitation(event: any) {
    this.caisse_exploitation_id = Number(event.target.value);
    console.log(this.caisse_exploitation_id);
  }

  selectCaissePrincipale(event: any) {
    this.caisse_principale_id = Number(event.target.value);
  }

  onSubmitForm(form: NgForm) {
    const transfert: TransfertCaisseExploitation = form.value;
    transfert.banque_id = this.banque_id;
    transfert.caisse_exploitation_id = this.caisse_exploitation_id;
    console.log(transfert);
     this.caisseService.TransfertBanqueCaisseExploiation(transfert).subscribe(response => {
       console.log(response.message);
       this.getListTransfertCaisseExploitation()
       this.getListBanque()
       this.globalService.toastShow(response.message,"Succ√®s")
     })
  }
}
